CLASS:: SynthConsole
summary:: a widget with controls: play/stop/record/scope etc.
categories:: Libraries>crucial>GUI
related:: Classes/SaveConsole

DESCRIPTION:: a widget with controls: play/stop/record/scope etc.

Each method you call adds another button to the gui.

This widget is used in AbstractPlayerGui but may also be used on its own.



CLASSMETHODS::

METHOD:: new


argument:: ugenFunc


argument:: layout


returns::


INSTANCEMETHODS::

METHOD:: format


returns::

METHOD:: duration


returns::

METHOD:: ugenFunc


returns::

METHOD:: onRecordOrWrite


returns::

METHOD:: init


returns::

METHOD:: remove


returns::

METHOD:: update


argument:: status


returns::

METHOD:: play


returns::

METHOD:: prepare


returns::

METHOD:: scope


argument:: duration


returns::

METHOD:: fftScope


returns::

METHOD:: record


returns::

METHOD:: write


argument:: dur


argument:: defpath


returns::

METHOD:: stop


argument:: stopFunc


returns::

METHOD:: free


returns::

METHOD:: formats


returns::

METHOD:: tempo


returns::

METHOD:: doPlay


returns::

METHOD:: doPrepare


returns::

METHOD:: doScope


argument:: duration


returns::

METHOD:: doFreqScope


returns::

METHOD:: doStop


argument:: stopFunc


returns::

METHOD:: doWrite


argument:: path


argument:: argduration


returns::

EXAMPLES::

code::
Sheet({ arg f;

	SynthConsole({ arg synth;
		 SinOsc.ar(300,0,0.3)
	},f) // if no layout provided it will create one
	.play
	.scope
	.fftScope
	.record("SoundFiles/testy.aiff") // sets defaultPath for the prompt dialog
	.write(20) // 20 seconds
	.pauseableRecord	// |,|  toggle recording on and off while you play
	.stop
	.formats
	.tempo // gui the default Tempo
})
::

SynthConsole sends notifications that you can register to recieve through NotificationCenter:

code::
NotificationCenter.register(yourSynthConsole,\didStop,you,{
	// do something like
	true.tabletTracking; // turn back on the wacom mouse
});

NotificationCenter.register(yourSynthConsole,\didRecordOrWrite,you,{
	arg path; // path is passed in with the notification
	savedTo = path;
});
::

